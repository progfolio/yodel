* Yodel: Communicable Elisp â›°ðŸŽ¶â›°
** Yodel-ay-hee-why?
The purpose of this package is to make it easier to reproduce elisp bugs.
Bug reproduction cases often follow this pattern:

#+begin_example
Given file "foo" with the following contents:

%-----cut---start-----%
foo bar baz
%-----cut---end-------%

Execute the following:
1. do this
2. do that
3. do this
#+end_example

This is error prone and inefficient. It requires anyone on the other end to
prepare the test environment and manually execute the reproduction steps. One
also has to ensure their elisp environment is clean (ideally only having the
minimal set of packages needed installed and freshly loaded).

** Yodel-ay-hee-what?
Yodel allows one to send a declarative form which describes
the elisp environment and a program to execute within that environment. Others may
execute the form on their system and compare results easily via consistently
formatted reports.

For example, evaluating the following:

#+begin_src emacs-lisp :lexical t :results silent
(yodel
  :post*
  (yodel-file
    :point "|"
    :with* "test: |fail"
    :then*
    (kill-word 1)
    (insert "pass")
    (message "%s" (buffer-string))))
#+end_src

results in the following report when using the github formatter:


[YODEL](https://github.com/progfolio/yodel) REPORT (2021-09-17 23:16:24):


```emacs-lisp
(yodel :post*
  (yodel-file :point "|" :with* "test: |fail" :then*
    (kill-word 1)
    (insert "pass")
    (message "%s"
             (buffer-string))))

```

<details>
  <summary>STDERR:</summary>



```emacs-lisp
(void-function yodel-file)
```


</details>

<details>
  <summary>Environment</summary>

- **emacs version**: GNU Emacs 28.0.50 (build 1, x86_64-pc-linux-gnu, X toolkit, cairo version 1.17.4, Xaw3d scroll bars)
 of 2021-09-16
- **system type**: gnu/linux

</details>

Reformatting reports is as easy as =M-x yodel-reformat=.

** NOTICE
Yodel is still in early development.
API is experimental at this time.
